---
import ItemCard from '@/components/ItemCard.astro';
import Pagination from '@/components/Pagination/Pagination.astro';
import { SearchBox } from '@/components/SearchBox';
import Layout from '@/layouts/Layout.astro';
import { fetchItemsWithParams } from '@/services/item_service';
import { SearchQuerySchema } from '@/types/item_types';

const params = Astro.url.searchParams;

const query = {
  search: {
    maxPrice: params.get('max') ?? 500_000,
    minPrice: params.get('min') ?? 50_000,
    colorList: params.getAll('color'),
    breed: params.get('breed') ?? '',
  },
  page: {
    currentPage: params.get('p') ?? 1,
    perPage: 12,
  },
};
const parsed = SearchQuerySchema.safeParse(query);
if (!parsed.success) {
  return new Response(null, {
    status: 400,
    statusText: 'Bad Request',
  });
}

const items = await fetchItemsWithParams(parsed.data);
---

<Layout title="ペット一覧">
  <div class="m-4">
    <SearchBox
      client:only="react"
      defaultValues={{
        maxPrice: parsed.data.search.maxPrice,
        minPrice: parsed.data.search.minPrice,
        colorList: parsed.data.search.colorList,
        breed: parsed.data.search.breed,
      }}
    />
  </div>

  <div class="flex justify-center">
    <ul
      class="grid grid-cols-2"
      transition:animate="slide"
      transition:name="page"
    >
      {
        items.records.map((item) => (
          <li transition:name={'card' + item.id}>
            <ItemCard item={item} />
          </li>
        ))
      }
    </ul>
  </div>
  <Pagination page={items} />
</Layout>
